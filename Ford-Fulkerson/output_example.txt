Дано:
7
a
f
a b 7
a c 6
b d 6
c f 9
d e 3
d f 4
e c 2

======================АЛГОРИТМ ФОРДА-ФАЛКЕРСОНА===================
Запускаем обход в глубину
==========================ОБХОД В ГЛУБИНУ=========================
Создаем стек и вставляем в него исток.
Стек на текущий момент:  ['a']
Список посещенных вершин: ['a']
Достаем из стека вершину a
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'b': 7, 'c': 6}
	Рассмотрим вершину b
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину c
		Добавляем вершину в стек и переходим к следующей смежной
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['c', 'b']
Список посещенных вершин: ['a', 'b', 'c']
Достаем из стека вершину c
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'f': 9, 'a': 0, 'e': 0}
	Рассмотрим вершину f
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину a
		Поток, который можно пропустить по ребру c->a = 0
		Переходим к следующей смежной вершине
	Рассмотрим вершину e
		Поток, который можно пропустить по ребру c->e = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['f', 'b']
Список посещенных вершин: ['a', 'b', 'c', 'f']
Достаем из стека вершину f
Найден сток, завершаем обход
Порядок, в котором рассматривались вершины для нахождения стока: ['a', 'c', 'f']
------------------------------------------------------------------
Путь к стоку был найден, восстановим его. Начнем из стока:
	К f мы пришли по ребру c->f
	К c мы пришли по ребру a->c
Весь путь к стоку: acf
Найдем максимальный поток, который можно пропустить по этому пути:
	По ребру a->c можно пропустить поток = 6
	По ребру c->f можно пропустить поток = 9
Тогда максимальный поток, который можно пропустить = 6
Уменьшим остаточные пропускные способности ребер и увеличим на обратных:
	1. Остаточная пропускная способность ребра a->c = 0
	   Пропускная способность обратного ребра c->a = 6
	2. Остаточная пропускная способность ребра c->f = 3
	   Пропускная способность обратного ребра f->c = 6
------------------------------------------------------------------
Запускаем обход в глубину
==========================ОБХОД В ГЛУБИНУ=========================
Создаем стек и вставляем в него исток.
Стек на текущий момент:  ['a']
Список посещенных вершин: ['a']
Достаем из стека вершину a
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'b': 7, 'c': 0}
	Рассмотрим вершину b
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину c
		Поток, который можно пропустить по ребру a->c = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['b']
Список посещенных вершин: ['a', 'b']
Достаем из стека вершину b
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'d': 6, 'a': 0}
	Рассмотрим вершину d
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину a
		Поток, который можно пропустить по ребру b->a = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['d']
Список посещенных вершин: ['a', 'b', 'd']
Достаем из стека вершину d
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'e': 3, 'f': 4, 'b': 0}
	Рассмотрим вершину e
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину f
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину b
		Поток, который можно пропустить по ребру d->b = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['f', 'e']
Список посещенных вершин: ['a', 'b', 'd', 'e', 'f']
Достаем из стека вершину f
Найден сток, завершаем обход
Порядок, в котором рассматривались вершины для нахождения стока: ['a', 'b', 'd', 'f']
------------------------------------------------------------------
Путь к стоку был найден, восстановим его. Начнем из стока:
	К f мы пришли по ребру d->f
	К d мы пришли по ребру b->d
	К b мы пришли по ребру a->b
Весь путь к стоку: abdf
Найдем максимальный поток, который можно пропустить по этому пути:
	По ребру a->b можно пропустить поток = 7
	По ребру b->d можно пропустить поток = 6
	По ребру d->f можно пропустить поток = 4
Тогда максимальный поток, который можно пропустить = 4
Уменьшим остаточные пропускные способности ребер и увеличим на обратных:
	1. Остаточная пропускная способность ребра a->b = 3
	   Пропускная способность обратного ребра b->a = 4
	2. Остаточная пропускная способность ребра b->d = 2
	   Пропускная способность обратного ребра d->b = 4
	3. Остаточная пропускная способность ребра d->f = 0
	   Пропускная способность обратного ребра f->d = 4
------------------------------------------------------------------
Запускаем обход в глубину
==========================ОБХОД В ГЛУБИНУ=========================
Создаем стек и вставляем в него исток.
Стек на текущий момент:  ['a']
Список посещенных вершин: ['a']
Достаем из стека вершину a
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'b': 3, 'c': 0}
	Рассмотрим вершину b
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину c
		Поток, который можно пропустить по ребру a->c = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['b']
Список посещенных вершин: ['a', 'b']
Достаем из стека вершину b
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'d': 2, 'a': 4}
	Рассмотрим вершину d
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину a
		Вершина уже была посещена ранее
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['d']
Список посещенных вершин: ['a', 'b', 'd']
Достаем из стека вершину d
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'e': 3, 'f': 0, 'b': 4}
	Рассмотрим вершину e
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину f
		Поток, который можно пропустить по ребру d->f = 0
		Переходим к следующей смежной вершине
	Рассмотрим вершину b
		Вершина уже была посещена ранее
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['e']
Список посещенных вершин: ['a', 'b', 'd', 'e']
Достаем из стека вершину e
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'c': 2, 'd': 0}
	Рассмотрим вершину c
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину d
		Поток, который можно пропустить по ребру e->d = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['c']
Список посещенных вершин: ['a', 'b', 'd', 'e', 'c']
Достаем из стека вершину c
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'f': 3, 'a': 6, 'e': 0}
	Рассмотрим вершину f
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину a
		Вершина уже была посещена ранее
		Переходим к следующей смежной вершине
	Рассмотрим вершину e
		Поток, который можно пропустить по ребру c->e = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['f']
Список посещенных вершин: ['a', 'b', 'd', 'e', 'c', 'f']
Достаем из стека вершину f
Найден сток, завершаем обход
Порядок, в котором рассматривались вершины для нахождения стока: ['a', 'b', 'd', 'e', 'c', 'f']
------------------------------------------------------------------
Путь к стоку был найден, восстановим его. Начнем из стока:
	К f мы пришли по ребру c->f
	К c мы пришли по ребру e->c
	К e мы пришли по ребру d->e
	К d мы пришли по ребру b->d
	К b мы пришли по ребру a->b
Весь путь к стоку: abdecf
Найдем максимальный поток, который можно пропустить по этому пути:
	По ребру a->b можно пропустить поток = 3
	По ребру b->d можно пропустить поток = 2
	По ребру d->e можно пропустить поток = 3
	По ребру e->c можно пропустить поток = 2
	По ребру c->f можно пропустить поток = 3
Тогда максимальный поток, который можно пропустить = 2
Уменьшим остаточные пропускные способности ребер и увеличим на обратных:
	1. Остаточная пропускная способность ребра a->b = 1
	   Пропускная способность обратного ребра b->a = 6
	2. Остаточная пропускная способность ребра b->d = 0
	   Пропускная способность обратного ребра d->b = 6
	3. Остаточная пропускная способность ребра d->e = 1
	   Пропускная способность обратного ребра e->d = 2
	4. Остаточная пропускная способность ребра e->c = 0
	   Пропускная способность обратного ребра c->e = 2
	5. Остаточная пропускная способность ребра c->f = 1
	   Пропускная способность обратного ребра f->c = 8
------------------------------------------------------------------
Запускаем обход в глубину
==========================ОБХОД В ГЛУБИНУ=========================
Создаем стек и вставляем в него исток.
Стек на текущий момент:  ['a']
Список посещенных вершин: ['a']
Достаем из стека вершину a
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'b': 1, 'c': 0}
	Рассмотрим вершину b
		Добавляем вершину в стек и переходим к следующей смежной
	Рассмотрим вершину c
		Поток, который можно пропустить по ребру a->c = 0
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Стек на текущий момент:  ['b']
Список посещенных вершин: ['a', 'b']
Достаем из стека вершину b
	Смежные с этой вершиной и пропускные способности соответствующих ребер: {'d': 0, 'a': 6}
	Рассмотрим вершину d
		Поток, который можно пропустить по ребру b->d = 0
		Переходим к следующей смежной вершине
	Рассмотрим вершину a
		Вершина уже была посещена ранее
		Переходим к следующей смежной вершине
	Подходящих смежных вершин больше нет, достаем следующую вершину из стека
------------------------------------------------------------------
Вершины в стеке закончились, пути в сток найдено не было
Путей к стоку больше нет, завершаем алгоритм
------------------------------------------------------------------
12
a b 6
a c 6
b d 6
c f 8
d e 2
d f 4
e c 2